[OSEv3:children]
masters
nodes
infra
lb
nfs
etcd
glusterfs
#glusterfs_registry
new_nodes
new_masters

[OSEv3:vars]
# fix for bug
# https://access.redhat.com/solutions/3480921
oreg_url_master=registry.access.redhat.com/openshift3/ose-${component}:${version}
oreg_url_node=registry.access.redhat.com/openshift3/ose-${component}:${version}

debug_level={{ debug_level | default('2') }}
docker_udev_workaround=True
openshift_node_debug_level={{ node_debug_level | default(debug_level, true) }}
openshift_master_debug_level={{ master_debug_level | default(debug_level, true) }}
openshift_master_access_token_max_seconds=2419200

# Cluster names  / wildcard subdomain#
#openshift_master_cluster_hostname={{ load_balancer_hostname }}
openshift_master_cluster_hostname={{ load_balancer_hostname }}
openshift_master_cluster_public_hostname={{ openshift_master_cluster_public_hostname }} 
openshift_master_default_subdomain={{ wildcard_zone }}

# Docker
container_runtime_docker_storage_setup_device=/dev/vdb
container_runtime_docker_storage_type=overlay2
openshift_docker_use_system_container=False
openshift_use_system_containers=False

####################
# custom certs
# Router
####################
{% if router_cert is defined %}
#openshift_hosted_router_certificate={"cafile": "/vagrant/keys/letsencrypt/acme.sh/openshift.jasonhorn.io/ca.cer", "certfile": "/vagrant/keys/letsencrypt/acme.sh/openshift.jasonhorn.io/fullchain.cer", "keyfile": "/vagrant/keys/letsencrypt/acme.sh/openshift.jasonhorn.io/openshift.jasonhorn.io.key"}
openshift_hosted_router_certificate={{ router_cert }}
{% endif %}

{% if master_cert is defined %}
# MASTER/API
openshift_master_overwrite_named_certificates=true
#openshift_master_named_certificates=[{"cafile": "/vagrant/keys/letsencrypt/acme.sh/openshift.jasonhorn.io/ca.cer", "certfile": "/vagrant/keys/letsencrypt/acme.sh/openshift.jasonhorn.io/fullchain.cer", "keyfile": "/vagrant/keys/letsencrypt/acme.sh/openshift.jasonhorn.io/openshift.jasonhorn.io.key", "names": ["openshift.jasonhorn.io"]}]
openshift_master_named_certificates={{ master_cert }}
{% endif %}

# Ports
openshift_master_api_port={{ console_port | default('8443') }} 
openshift_master_console_port={{ console_port  | default('8443') }}

openshift_override_hostname_check=true
osm_use_cockpit=false

# release 
openshift_release={{ openshift_release | default('v3.9') }}
openshift_deployment_type=openshift-enterprise

# reboot masters
#openshift_rolling_restart_mode=system

# quota for emptydir size
openshift_node_local_quota_per_fsgroup=512Mi
openshift_install_examples=true

# Identiy
{% if openshift_master_identity_providers is defined %}
openshift_master_identity_providers={{ openshift_master_identity_providers }}
{% else %}
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
{% endif %}

{% if openshift_master_htpasswd_users is defined %}
openshift_master_htpasswd_users={{ openshift_master_htpasswd_users }}
{% else %}
# admin:changeme
openshift_master_htpasswd_users={'admin': '$apr1$zAhyA9Ko$rBxBOwAwwtRuuaw8OtCwH0'}
{% endif %}

# Service Broker 
openshift_enable_service_catalog=true
ansible_service_broker_install=false
template_service_broker_install=true

# Users
ansible_become=yes
#ansible_ssh_user="{{ admin_user }}"
#remote_user="{{ admin_user }}"

# Networking
os_sdn_network_plugin_name={{ os_sdn_network_plugin_name | default('redhat/openshift-ovs-subnet') }}
{% if osm_cluster_network_cidr is defined %}
osm_cluster_network_cidr={{ osm_cluster_network_cidr }}
{% endif %}
{% if openshift_portal_net is defined %}
openshift_portal_net={{ openshift_portal_net }}"
{% endif %}

{% if openshift_disable_check is defined %}
openshift_disable_check={{ openshift_disable_check }}
{% endif %}
# TODO: if
# when using CNS w/o cloud-provider
dynamic_volumes_check=False
# TODO: endif

openshift_master_cluster_method=native

# Router
openshift_hosted_router_replicas=3
openshift_router_selector='region=infra'

{% if etcd_volume_size is defined %}
# Install etcd storage for ASB
#openshift_hosted_etcd_storage_kind={{ storage_type }}
#openshift_hosted_etcd_storage_nfs_options="*(rw,root_squash,sync,no_wdelay)"
#openshift_hosted_etcd_storage_nfs_directory={{ storage_dir }}
#openshift_hosted_etcd_storage_volume_name=etcd-vol2 
#openshift_hosted_etcd_storage_access_modes=["ReadWriteOnce"]
#openshift_hosted_etcd_storage_volume_size={{ etcd_volume_size }}
#openshift_hosted_etcd_storage_labels={'storage': 'etcd'}
{% endif %}

# Install registry
# Specify that we want to use GlusterFS storage for a hosted registry
openshift_hosted_registry_storage_volume_size={{ registry_volume_size }}
openshift_hosted_registry_replicas=3

openshift_hosted_registry_storage_kind=glusterfs
openshift_storage_glusterfs_storageclass_default=true
openshift_storage_glusterfs_block_deploy=false
openshift_storage_glusterfs_registry_block_deploy=true
openshift_storage_glusterfs_registry_block_storageclass=true
openshift_storage_glusterfs_registry_block_storageclass_default=true
openshift_storageclass_default=false
#endif using glusterfs


#if using glusterfs
# CNS Bug https://bugzilla.redhat.com/show_bug.cgi?id=1581622
openshift_storage_glusterfs_heketi_image=registry.access.redhat.com/rhgs3/rhgs-volmanager-rhel7
openshift_storage_glusterfs_image=registry.access.redhat.com/rhgs3/rhgs-server-rhel7
openshift_storage_glusterfs_block_image=registry.access.redhat.com/rhgs3/rhgs-gluster-block-prov-rhel7
openshift_storage_glusterfs_s3_image=registry.access.redhat.com/rhgs3/rhgs-gluster-s3-server-rhel7#

# Install metrics 
{% if install_metrics | default(true) | bool %}
openshift_metrics_install_metrics=true
openshift_metrics_storage_kind={{ storage_type }}
openshift_metrics_storage_volume_size={{ metrics_volume_size | default('10Gi') }}
openshift_metrics_hawkular_hostname="metrics.{{ wildcard_zone }}"
openshift_metrics_cassandra_pvc_size={{ cassandra_volume_size | default('10Gi') }}
openshift_metrics_cassandra_replicas="1"
openshift_metrics_hawkular_nodeselector={"region":"infra"}
openshift_metrics_cassandra_nodeselector={"region":"infra"}
openshift_metrics_heapster_nodeselector={"region":"infra"}
{% else %}
openshift_metrics_install_metrics=false
{% endif %}

# ES OPS
openshift_logging_use_ops=false

{% if install_logging | default(true) | bool %}
openshift_logging_install_logging=true
openshift_logging_master_public_url="https://{{ openshift_master_cluster_public_hostname }}:{{ console_port }}"
openshift_logging_storage_volume_size={{ logging_volume_size | default('10Gi') }}
openshift_logging_es_nodeselector={"region": "infra"}
openshift_logging_kibana_nodeselector={"region": "infra"}
openshift_logging_curator_nodeselector={"region": "infra"}
{% else %}
openshift_logging_install_logging=false
{% endif %}

# Set retention
openshift_logging_curator_default_days=5
openshift_logging_es_cpu_limit="1"
openshift_logging_es_cpu_request="1"
openshift_logging_es_memory_limit="1Gi"
openshift_logging_es_memory_request="500Mi"
openshift_logging_es_pvc_size={{ logging_es_size | default('10Gi') }}
openshift_logging_es_cluster_size=1

# prometheus
{% if install_prometheus | default(true) | bool  %}
openshift_hosted_prometheus_deploy=true
openshift_prometheus_storage_kind={{ storage_type }}
openshift_prometheus_storage_type=pvc
openshift_prometheus_storage_volume_size={{ prometheus_volume_size | default('10Gi') }}
openshift_prometheus_alertmanager_storage_type=pvc
openshift_prometheus_alertmanager_pvc_size={{ prometheus_alertmanager_size | default('10Gi') }}
openshift_prometheus_alertmanager_pvc_name=alertmanager
openshift_prometheus_alertmanager_limits_memory="1Gi"
openshift_prometheus_alertbuffer_storage_type=pvc
openshift_prometheus_alertbuffer_pvc_size={{ prometheus_alertbuffer_size | default('10Gi') }}
openshift_prometheus_oauth_proxy_cpu_requests="100m"
{% else %}
openshift_hosted_prometheus_deploy=false
{% endif %}

# grafana
{% if install_grafana | default(true) | bool  %}
openshift_grafana_state=present
openshift_grafana_node_exporter=true
openshift_grafana_storage_type=pvc
{% else %}
openshift_grafana_state=absent
{% endif %}

[masters]
master1 openshift_hostname=master1 
master2 openshift_hostname=master2
master3 openshift_hostname=master3

[etcd]
master1
master2
master3

[new_nodes]
[new_masters]

[infra]
infra1
infra2
infra3

[nfs]

[lb]
openshift-lb  


[glusterfs]
infra1 glusterfs_devices='[ "/dev/vdd" ]'
infra2 glusterfs_devices='[ "/dev/vdd" ]'
infra3 glusterfs_devices='[ "/dev/vdd" ]'

#[glusterfs_registry]
#infra1 glusterfs_devices='[ "/dev/vdd" ]'
#infra2 glusterfs_devices='[ "/dev/vdd" ]'
#infra3 glusterfs_devices='[ "/dev/vdd" ]'

[nodes]
master1 openshift_hostname=master1   openshift_node_labels="{'region':'master','zone':'default'}"
master2 openshift_hostname=master2   openshift_node_labels="{'region':'master','zone':'default'}"
master3 openshift_hostname=master3   openshift_node_labels="{'region':'master','zone':'default'}"
infra1  openshift_hostname=infra1    openshift_node_labels="{'region':'infra', 'zone':'default'}"
infra2  openshift_hostname=infra2    openshift_node_labels="{'region':'infra', 'zone':'default'}"
infra3  openshift_hostname=infra3    openshift_node_labels="{'region':'infra', 'zone':'default'}"
{% for n in range(1,nodes+1) %}
node{{ "0%s" |format(n) }} openshift_hostname=node{{ "0%s" |format(n) }} openshift_node_labels="{'region':'apps','zone':'default'}"
{% endfor %}
